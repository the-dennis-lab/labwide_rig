<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="cricket_1" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>A1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="cricket_2" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>B1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="cricket_4" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>C1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="cricket_8" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>A1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="cricket_16" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>A1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="cricket_32" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>A1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="cricket_64" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>A1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="cricket_128" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>H2</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>location_list</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT0.001S</rx:DueTime>
          <rx:Period>PT0S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>time</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:CombineLatest" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:WithLatestFrom" />
      </Expression>
      <Expression xsi:type="ipy:PythonTransform">
        <ipy:Name>get_lsax_values</ipy:Name>
        <ipy:Script>from System import Tuple

@returns(Tuple[Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int]])
def process(value):
  loc_list=value[0]
  loc_tuples=[]
  for loc in loc_list:
    for line_val in value[1]:
      split_vals = line_val.split(',')
      if loc == split_vals[0]:
        loc_tuples.append([int(split_vals[1]),int(split_vals[2])])
  print(loc_tuples)
  return Tuple[Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int],Tuple[int,int]](Tuple[int,int](loc_tuples[0][0],loc_tuples[0][1]),Tuple[int,int](loc_tuples[1][0],loc_tuples[1][1]),Tuple[int,int](loc_tuples[2][0],loc_tuples[2][1]),Tuple[int,int](loc_tuples[3][0],loc_tuples[3][1]),Tuple[int,int](loc_tuples[4][0],loc_tuples[4][1]),Tuple[int,int](loc_tuples[5][0],loc_tuples[5][1]),Tuple[int,int](loc_tuples[6][0],loc_tuples[6][1]),Tuple[int,int](loc_tuples[7][0],loc_tuples[7][1]))</ipy:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timestamp" />
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>C:\Users\dennise\Desktop\location_vals_.csv</io:FileName>
        <io:ListSeparator />
        <io:Append>false</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>false</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>C:\Users\dennise\Desktop\location_inputs_.csv</io:FileName>
        <io:ListSeparator />
        <io:Append>false</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>false</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="FileName" DisplayName="locations_csv" />
      </Expression>
      <Expression xsi:type="io:CsvReader">
        <io:FileName>C:\Users\dennise\Downloads\20221118_centers - 20230207.csv</io:FileName>
        <io:SkipRows>1</io:SkipRows>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:ToArray" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:AsyncSubject">
        <Name>location_list</Name>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="19" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="19" Label="Source2" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="19" Label="Source3" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="19" Label="Source4" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="19" Label="Source5" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="19" Label="Source6" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="19" Label="Source7" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="15" To="19" Label="Source8" />
      <Edge From="16" To="20" Label="Source2" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="18" To="19" Label="Source9" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="19" To="24" Label="Source1" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="21" To="22" Label="Source1" />
      <Edge From="22" To="23" Label="Source1" />
      <Edge From="25" To="26" Label="Source1" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="28" To="29" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>