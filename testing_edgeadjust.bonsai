<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.6.3"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:p1="clr-namespace:ZaberMovement;assembly=ZaberMovement"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:dsp="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp"
                 xmlns:dlc="clr-namespace:Bonsai.DeepLabCut;assembly=Bonsai.DeepLabCut"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:ZaberDevice">
          <p1:PortName>COM3</p1:PortName>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:CameraCapture">
          <cv:Index>0</cv:Index>
          <cv:CaptureProperties>
            <cv:CapturePropertyAssignment>
              <cv:Property>FrameWidth</cv:Property>
              <cv:Value>2048</cv:Value>
            </cv:CapturePropertyAssignment>
            <cv:CapturePropertyAssignment>
              <cv:Property>FrameHeight</cv:Property>
              <cv:Value>2048</cv:Value>
            </cv:CapturePropertyAssignment>
            <cv:CapturePropertyAssignment>
              <cv:Property>Fps</cv:Property>
              <cv:Value>80</cv:Value>
            </cv:CapturePropertyAssignment>
            <cv:CapturePropertyAssignment>
              <cv:Property>PosMsec</cv:Property>
              <cv:Value>0</cv:Value>
            </cv:CapturePropertyAssignment>
          </cv:CaptureProperties>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:VideoWriter">
          <cv:FileName>C:\Users\emily\Desktop\data\video_basler_.avi</cv:FileName>
          <cv:Suffix>Timestamp</cv:Suffix>
          <cv:Buffered>true</cv:Buffered>
          <cv:Overwrite>false</cv:Overwrite>
          <cv:FourCC>FMP4</cv:FourCC>
          <cv:FrameRate>80</cv:FrameRate>
          <cv:FrameSize>
            <cv:Width>2048</cv:Width>
            <cv:Height>2048</cv:Height>
          </cv:FrameSize>
          <cv:ResizeInterpolation>Linear</cv:ResizeInterpolation>
        </Combinator>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>DLC</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:DetectPose">
                <dlc:ModelFileName>C:\Users\emily\Desktop\rigtesting-thedennislab-2022-07-19\exported-models\DLC_rigtesting_resnet_50_iteration-1_shuffle-1\snapshot-300000.pb</dlc:ModelFileName>
                <dlc:PoseConfigFileName>C:\Users\emily\Desktop\rigtesting-thedennislab-2022-07-19\dlc-models\iteration-0\rigtestingJul19-trainset95shuffle1\test\pose_cfg.yaml</dlc:PoseConfigFileName>
                <dlc:MinConfidence>0.5</dlc:MinConfidence>
                <dlc:ScaleFactor>1</dlc:ScaleFactor>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>nose</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>tail_tip</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>T_left</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>T_right</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>T_cross</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>T_base</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>dot_head</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Name>takemedianX</scr:Name>
              <scr:Script>import math
from System import Tuple
clr.AddReference("OpenCV.Net")
from System import Tuple

@returns(int)
def process(value):
  const=1024
  goodvals=[val for val in value if not math.isnan(val)]
  goodsum=math.fsum(goodvals)
  if len(goodvals) &gt; 0:
    goodlen=len(goodvals)
    medianval= int((goodsum/goodlen))
    if abs(math.fsum([medianval,-const])) &lt; (const/6):
      medianval = int(const)
  else:
    medianval=const
  return medianval</scr:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Name>takemedianY</scr:Name>
              <scr:Script>import math
from System import Tuple
clr.AddReference("OpenCV.Net")
from System import Tuple

@returns(int)
def process(value):
  const=1024
  goodvals=[val for val in value if not math.isnan(val)]
  goodsum=math.fsum(goodvals)
  if len(goodvals) &gt; 0:
    goodlen=len(goodvals)
    medianval= int((goodsum/goodlen))
    if abs(math.fsum([medianval,-const])) &lt; (const/6):
      medianval = int(const)
  else:
    medianval=const
  return medianval</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>C:\Users\emily\Desktop\data\DLCmedians_.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>Timestamp</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="1" To="5" Label="Source1" />
            <Edge From="1" To="8" Label="Source1" />
            <Edge From="1" To="11" Label="Source1" />
            <Edge From="1" To="14" Label="Source1" />
            <Edge From="1" To="17" Label="Source1" />
            <Edge From="1" To="20" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="2" To="4" Label="Source1" />
            <Edge From="3" To="22" Label="Source1" />
            <Edge From="4" To="25" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="5" To="7" Label="Source1" />
            <Edge From="6" To="22" Label="Source2" />
            <Edge From="7" To="25" Label="Source2" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="8" To="10" Label="Source1" />
            <Edge From="9" To="22" Label="Source3" />
            <Edge From="10" To="25" Label="Source3" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="11" To="13" Label="Source1" />
            <Edge From="12" To="22" Label="Source4" />
            <Edge From="13" To="25" Label="Source4" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="14" To="16" Label="Source1" />
            <Edge From="15" To="22" Label="Source5" />
            <Edge From="16" To="25" Label="Source5" />
            <Edge From="17" To="18" Label="Source1" />
            <Edge From="17" To="19" Label="Source1" />
            <Edge From="18" To="22" Label="Source6" />
            <Edge From="19" To="25" Label="Source6" />
            <Edge From="20" To="21" Label="Source1" />
            <Edge From="20" To="24" Label="Source1" />
            <Edge From="21" To="22" Label="Source7" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="23" To="27" Label="Source1" />
            <Edge From="24" To="25" Label="Source7" />
            <Edge From="25" To="26" Label="Source1" />
            <Edge From="26" To="27" Label="Source2" />
            <Edge From="27" To="28" Label="Source1" />
            <Edge From="27" To="29" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item1</Selector>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item2</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timestamp" />
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>C:\Users\emily\Desktop\data\DLC_medians.csv</io:FileName>
        <io:Append>false</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>false</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT1M</rx:DueTime>
          <rx:Period>PT0S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="GreaterThanOrEqual">
        <Operand xsi:type="WorkflowProperty" TypeArguments="sys:Int64">
          <Value>1</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT0S</rx:DueTime>
          <rx:Period>PT0.05S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="IntProperty">
          <Value>1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:CombineLatest" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:ZaberLocation" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timestamp" />
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>C:\Users\emily\Desktop\data\ZaberLocation_.csv</io:FileName>
        <io:Append>false</io:Append>
        <io:Overwrite>true</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>false</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:LoadImage">
          <cv:FileName>C:\Users\emily\Desktop\data\rig_y_mult.png</cv:FileName>
          <cv:Mode>Grayscale</cv:Mode>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:LoadImage">
          <cv:FileName>C:\Users\emily\Desktop\data\rig_x_mult.png</cv:FileName>
          <cv:Mode>Grayscale</cv:Mode>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="IntProperty">
          <Value>1400</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:CombineLatest" />
      </Expression>
      <Expression xsi:type="scr:PythonTransform">
        <scr:Name>x_velocity</scr:Name>
        <scr:Script>import math
from System import Tuple
clr.AddReference("OpenCV.Net")
from System import Tuple

@returns(int)
def process(value):
  itemval=value[0]
  img=value[1]
  zaberloc=value[2]
  lockstep=zaberloc[0]
  ax3=zaberloc[1]
  intval=value[3]

  #make constant depend on zaber
  mult_str=str(img[int(lockstep/100),int(ax3/100)])[1:4]


  if '255' in mult_str:
    constant=256
  #elif '19' in mult_str:
  #  constant = 192
  #elif '64' in mult_str:
  #  constant=64
  elif '0' in mult_str:
    constant=0
  else:
    constant=128

  newval = itemval/8
  newval = newval-constant
  newval = newval*-intval

  return newval</scr:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="dsp:Abs" />
      </Expression>
      <Expression xsi:type="GreaterThan">
        <Operand xsi:type="DoubleProperty">
          <Value>0</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>double(it)</scr:Expression>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:CombineLatest" />
      </Expression>
      <Expression xsi:type="scr:PythonTransform">
        <scr:Name>y_velocity</scr:Name>
        <scr:Script>import math
from System import Tuple
clr.AddReference("OpenCV.Net")
from System import Tuple

@returns(int)
def process(value):
  itemval=value[0]
  img=value[1]
  zaberloc=value[2]
  lockstep=zaberloc[0]
  ax3=zaberloc[1]
  intval=value[3]

  #make constant depend on zaber
  mult_str=str(img[int(lockstep/100),int(ax3/100)])[1:4]


  if '255' in mult_str:
    constant=256
  #elif '19' in mult_str:
  #  constant = 192
  #elif '64' in mult_str:
  #  constant=64
  elif '0' in mult_str:
    constant=0
  else:
    constant=128

  newval = itemval/8
  newval = newval-constant
  newval = newval*intval

  return newval</scr:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="dsp:Abs" />
      </Expression>
      <Expression xsi:type="GreaterThan">
        <Operand xsi:type="DoubleProperty">
          <Value>0</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Merge" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:DistinctUntilChanged" />
      </Expression>
      <Expression xsi:type="PublishSubject">
        <Name>isMoving?</Name>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>double(it)</scr:Expression>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:CombineLatest" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:ZaberMove" />
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>C:\Users\emily\Desktop\data\ZaberMove_.csv</io:FileName>
        <io:Append>false</io:Append>
        <io:Overwrite>true</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>false</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="ModelFileName" />
        <Property Name="MinConfidence" />
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="GroupWorkflow">
          <Name>saveThermal1</Name>
          <Description />
          <Workflow>
            <Nodes>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="io:StartProcess">
                  <io:FileName>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe</io:FileName>
                  <io:Arguments>vlc -vvv "rtsp://admin:Musmusculus.@10.123.1.59/stream3" --sout "#transcode{vcodec=h264,acodec=mpga,ab=128,channels=2,samplerate=44100,scodec=none}:file{dst=C:\\Users\\emily\\Desktop\\data\\thermal1_$(get-date -f yyyyMMdd_hh-mm-ss).mp4,no-overwrite}"</io:Arguments>
                </Combinator>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="GroupWorkflow">
          <Name>chirp</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>isMoving?</Name>
              </Expression>
              <Expression xsi:type="ExternalizedMapping">
                <Property Name="DueTime" />
                <Property Name="Period" />
              </Expression>
              <Expression xsi:type="CreateObservable">
                <Name>CheckCondition</Name>
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="Condition">
                      <Name>isNotMoving</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="BitwiseNot" />
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="1" To="2" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="DueTime" />
                      <Property Name="Period" />
                    </Expression>
                    <Expression xsi:type="SelectMany">
                      <Name>Timer</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="ExternalizedMapping">
                            <Property Name="DueTime" />
                            <Property Name="Period" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timer">
                              <rx:DueTime>PT1S</rx:DueTime>
                              <rx:Period>PT2S</rx:Period>
                            </Combinator>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="1" To="2" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                    <Edge From="1" To="3" Label="Source1" />
                    <Edge From="2" To="3" Label="Source2" />
                    <Edge From="3" To="4" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:Switch" />
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="IntProperty">
                  <Value>1</Value>
                </Combinator>
              </Expression>
              <Expression xsi:type="ExternalizedMapping">
                <Property Name="PortName" />
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="io:SerialStringWrite">
                  <io:PortName>COM5</io:PortName>
                  <io:NewLine>\r\n</io:NewLine>
                </Combinator>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:Timestamp" />
              </Expression>
              <Expression xsi:type="io:CsvWriter">
                <io:FileName>C:\Users\emily\Desktop\data\chirp_times_.csv</io:FileName>
                <io:Append>false</io:Append>
                <io:Overwrite>false</io:Overwrite>
                <io:Suffix>Timestamp</io:Suffix>
                <io:IncludeHeader>false</io:IncludeHeader>
              </Expression>
            </Nodes>
            <Edges>
              <Edge From="0" To="2" Label="Source1" />
              <Edge From="1" To="2" Label="Source2" />
              <Edge From="2" To="3" Label="Source1" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="6" Label="Source1" />
              <Edge From="4" To="7" Label="Source1" />
              <Edge From="5" To="6" Label="Source2" />
              <Edge From="7" To="8" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="GroupWorkflow">
          <Name>saveThermal2</Name>
          <Description />
          <Workflow>
            <Nodes>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="io:StartProcess">
                  <io:FileName>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe</io:FileName>
                  <io:Arguments>vlc -vvv "rtsp://admin:Musmusculus.@IPADDRESS/stream3" --sout "#transcode{vcodec=h264,acodec=mpga,ab=128,channels=2,samplerate=44100,scodec=none}:file{dst=C:\\Users\\emily\\Desktop\\data\\thermal2_$(get-date -f yyyyMMdd_hh-mm-ss).mp4,no-overwrite}"</io:Arguments>
                </Combinator>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="12" Label="Source1" />
      <Edge From="0" To="32" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="1" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="3" To="5" Label="Source1" />
      <Edge From="3" To="6" Label="Source1" />
      <Edge From="4" To="19" Label="Source1" />
      <Edge From="5" To="24" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="28" Label="Source3" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source2" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="13" To="19" Label="Source3" />
      <Edge From="13" To="24" Label="Source3" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="16" To="19" Label="Source2" />
      <Edge From="17" To="24" Label="Source2" />
      <Edge From="18" To="19" Label="Source4" />
      <Edge From="18" To="24" Label="Source4" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="20" To="23" Label="Source1" />
      <Edge From="21" To="22" Label="Source1" />
      <Edge From="22" To="28" Label="Source1" />
      <Edge From="23" To="32" Label="Source2" />
      <Edge From="24" To="25" Label="Source1" />
      <Edge From="25" To="26" Label="Source1" />
      <Edge From="25" To="31" Label="Source1" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="27" To="28" Label="Source2" />
      <Edge From="28" To="29" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="31" To="32" Label="Source3" />
      <Edge From="32" To="33" Label="Source1" />
      <Edge From="32" To="34" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>